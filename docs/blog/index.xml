<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Ryan S. Kerwin</title>
    <link>http://www.ryanskerwin.com/blog/index.xml</link>
    <description>Recent content in Blogs on Ryan S. Kerwin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 06 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.ryanskerwin.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>This I Know (This I Don&#39;t)</title>
      <link>http://www.ryanskerwin.com/blog/this-i-know-this-i-dont/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.ryanskerwin.com/blog/this-i-know-this-i-dont/</guid>
      <description>&lt;p&gt;It is perfectly acceptable to not know everything. Very few people do. So for the rest of us, we’re likely to encounter situations now and then when we have to decide whether we’ll pretend we know what the people around us are talking about, or own up to the fact that we have no earthly idea.&lt;/p&gt;

&lt;p&gt;When it comes to things like books and movie discussions, the odd white lie doesn’t do anybody any real harm: “Yeah, I think I might have read that when I was eleven. I think it was pretty good.” It’s equally fine to play it more truthfully: “I’ve heard of the show you’re referencing, but I haven’t ever seen it. Is it worth checking out?” But when we are put on the spot in a professional setting, it’s much more tempting&amp;mdash;and more harmful&amp;mdash;to bluff about knowledge that we think we ought to have rather than accurately communicating our level of expertise.&lt;/p&gt;

&lt;p&gt;At this point I should confess: I have, at various times, been addicted to pretending I know more than I do as a way to feel less like I don’t belong. When I first got to graduate school I experienced what is known as imposter syndrome&amp;mdash;I was convinced that I had been accepted because of some computer error rather than my computer science abilities. When I left grad school to wander the startup path, I was worried that my academic coding experience was woefully insufficient for the tasks I had laid out before me. In both of these cases, I found myself overstating my knowledge of what I thought I should know to people around me as a way of compensating for the reality of my not knowing everything. What I didn’t realize was that in trying to save face for myself, I was doing a disservice to everybody who relied on my skills, since they were being given an inaccurate understanding of my capabilities.&lt;/p&gt;

&lt;p&gt;The fact is: knowing that you don’t know something requires a significant amount of knowledge in the subject area in the first place. If I didn’t know anything about cooking, I probably wouldn’t even consider that I don’t know the proper way to julienne a cabbage. The majority of the times when we feel inadequate follow this pattern: when we know a fair amount about a subject and have the resources to learn more, but don’t have immediate recollection of specific details. And that’s a great place to be! In the information age, knowing how to find something out quickly is almost as good as actually knowing the answer yourself.&lt;/p&gt;

&lt;p&gt;When I was in graduate school, I truly &lt;em&gt;didn&amp;rsquo;t&lt;/em&gt; know how to do everything that I had to do. And in my startup life, there are several times that I have hit a wall in my coding with no idea of how to advance. These are the times when I have learned the most. There is nothing that teaches a better lesson than having to work through a problem from beginning to end. Shying away from a learning experience for fear of admitting that we don&amp;rsquo;t already have the answers leaves everybody worse off. Far better to swallow a little pride, read a few tutorials, and forge ahead.&lt;/p&gt;

&lt;p&gt;All of this is why I have been trying to be more deliberate in my discussions about professional knowledge lately. I try to answer questions with: “I don’t really know how to do that, but let me get back to you in an hour after I’ve done some reading.” Or: “I’m not sure what that means, but it sounds interesting. Would you mind explaining it to me?” Being honest with myself and my coworkers when I don’t know something ensures that we are all operating with the same understanding of my abilities and limits; and it lets me relax and feel less like the clock is ticking down until everyone figures out I’m not as smart as I hope that they think I am. Imposter syndrome can turn into a self-fulfilling prophecy. We&amp;rsquo;re only not good enough when we pretend to be better than we are.&lt;/p&gt;

&lt;p&gt;I know I’m not the only person who has struggled with this particular monkey. Sometimes the only way to improve is to admit that we need to work on something, and to not be afraid of judgement while we do. Coworkers and employers are far more likely to look favorably on somebody making a real effort to develop and expand professionally than somebody underperforming on projects because of a disconnect between stated and actual skill levels.&lt;/p&gt;

&lt;p&gt;Will being more honest about your abilities solve all of your problems at work? Probably not. Maybe.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I don&amp;rsquo;t know.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s OK.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coming soon to a webspace near you...</title>
      <link>http://www.ryanskerwin.com/blog/coming-soon/</link>
      <pubDate>Sun, 30 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.ryanskerwin.com/blog/coming-soon/</guid>
      <description>&lt;p&gt;Welcome! If you&amp;rsquo;ve found this text, it means you&amp;rsquo;ve encountered my blog before I&amp;rsquo;ve had a chance to produce any real content. I&amp;rsquo;m flattered you&amp;rsquo;re here!&lt;/p&gt;

&lt;p&gt;Up until now, I&amp;rsquo;ve never felt the need to connect with the world through a blog. But after 2+ years as the solo software developer for a biotech startup, it occurs to me that I may have learned a few things that could prove useful to other programmers trying to make the transition from academic to professional. If you come back soon, I promise I will take a crack at tackling some heavy-hitting topics such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Imposter syndrome&lt;/li&gt;
&lt;li&gt;Self motivation&lt;/li&gt;
&lt;li&gt;Failing fast&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As well as some less explicitly-professional thoughts I have about being a human in the modern world.&lt;/p&gt;

&lt;p&gt;If just a single person wakes up one day feeling comforted by something they&amp;rsquo;ve read on this site, I&amp;rsquo;ll consider this endeavor a success.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>